name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    name: Python ${{ matrix.python-version }} sample
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Use pip Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install the test dependencies
        run: pip install black isort                
      - name: Install current project
        run: python -m pip install .
      - name: Install App dependencies
        uses: py-actions/py-dependency-install@v3
        with:
          path: "requirements.txt"
      - name: Check code format
        run: |
          black --check .
          isort --profile black --check .
      - name: Check tool version
        run: readactor --version

      # - name: Run Old Tests
      #   run: python -m test scripts.command_line_tool

#      - name: Run Click Test of Version
#        run: python  -m unittest -v tests.test_click

      - name: Run New Tests
        run: python -m unittest discover -v

# see https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Use pip Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v3
        with:
          path: "requirements.txt"
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      - name: Publish test ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TESTPYPI_API_TOKEN_FOR_READCHINALOOKUP }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

  # Note(QG): this section should be replaced with git action of python semantic release
  # TODO: release precedure needs documentation
      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API }}
