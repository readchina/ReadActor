name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10' ]
    name: Python ${{ matrix.python-version }} sample
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Use pip Cache  
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-            
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v3
        with:
          path: "requirements.txt"
      - name: Check tool version
        run: echo "fix me"
      - name: Run Tests
        run: echo "fix me"
# see https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  # deploy: 
  #   runs-on: ubuntu-latest
  #   needs: build    
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.10
  #     - name: Use pip Cache  
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-            
  #     - name: Install Python dependencies
  #       uses: py-actions/py-dependency-install@v3
  #       with:
  #         path: "requirements.txt"
  #     - name: Install pypa/build
  #       run: >-
  #         python -m
  #         pip install
  #         build
  #         --user
  #     - name: Build a binary wheel and a source tarball
  #       run: >-
  #         python -m
  #         build
  #         --sdist
  #         --wheel
  #         --outdir dist/
  #         .
  #     - name: Publish distribution ðŸ“¦ to Test PyPI
  #       uses: pypa/gh-action-pypi-publish@v1
  #       with:
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #         repository_url: https://test.pypi.org/legacy/
  #     - name: Publish distribution ðŸ“¦ to PyPI
  #       if: startsWith(github.ref, 'refs/tags')
  #       uses: pypa/gh-action-pypi-publish@v1
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }}        
